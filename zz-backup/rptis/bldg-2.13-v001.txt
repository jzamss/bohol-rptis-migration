/* BLDG FLOOR INFORMATION */

/*======================================================
NOTE:
  * objid - primary key
  * bldguseid - links to bldguse.objd, set to ''
  * bldgrpuid - links to trans_stamp
  * storeyrate - storey adjustment rate
======================================================*/

drop view if exists  rptis.etracs_bldgfloor 
;

create view rptis.etracs_bldgfloor 
as
select 
	concat('BF', md5(concat(rand(),d.trans_stamp, d.xoid, d.floor_no))) AS objid,
	d.xoid as bldguseid,				
	a.trans_stamp as bldgrpuid,
	d.floor_no as floorno,
	sum(a.area) as area,
	sum(ff.percent_value) as storeyrate,
	0 as unitvalue,
	sum(d.amount) as basemarketvalue,
	sum(a.assmt_level * 100) as adjustment,
	sum(a.market_value) as marketvalue
FROM p_ar a
INNER JOIN h_property_info b ON a.trans_stamp = b.trans_stamp
INNER JOIN h_bldg_gen_info c ON a.trans_stamp = c.trans_stamp
INNER JOIN h_bldg_floor d ON a.trans_stamp = d.trans_stamp
INNER JOIN d_bldg_depreciation ee ON a.trans_stamp = ee.trans_stamp
INNER JOIN m_addtnl_every_floor_bldg ff ON d.struc_code = ff.struc_code 
	AND d.bldg_kind_code = ff.bldg_kind_code 
	AND d.bldg_class_code=ff.bldg_class_code
GROUP BY a.trans_stamp, d.xoid, d.floor_no
;



insert into training_etracs255.bldgfloor (
  objid,
  bldguseid,
  bldgrpuid,
  floorno,
  area,
  storeyrate,
  basevalue,
  unitvalue,
  basemarketvalue,
  adjustment,
  marketvalue
)
select 
  objid,
  bldguseid,
  bldgrpuid,
  floorno,
  area,
  storeyrate,
  unitvalue as basevalue,
  unitvalue,
  basemarketvalue,
  adjustment,
  marketvalue
from rptis.etracs_bldgfloor
;  
